provider "azurerm" {
  features {}
}

locals {
  infra_rg_name       = "aks-poc"
  infra_nodes_rg_name = "aks-poc-nodes"
}

# The main resource group
resource "azurerm_resource_group" "main" {
  name     = local.infra_rg_name
  location = var.location
}

# The AKS nodes resource group (auto generated by AKS cluster)
data "azurerm_resource_group" "nodes" {
  name = azurerm_kubernetes_cluster.main.node_resource_group
  # location   = var.location # Add the location attribute here
  depends_on = [azurerm_kubernetes_cluster.main]
}

# AKS cluster
resource "azurerm_kubernetes_cluster" "main" {
  name                = var.kubernetes_cluster_name
  location            = var.location
  resource_group_name = azurerm_resource_group.main.name
  dns_prefix          = var.kubernetes_cluster_name
  node_resource_group = local.infra_nodes_rg_name
  kubernetes_version  = "1.28"

  default_node_pool {
    name                        = "default"
    node_count                  = 2
    os_disk_size_gb             = 30
    vm_size                     = "Standard_D2_v2"
    temporary_name_for_rotation = "tmpdefault"
    # vnet_subnet_id              = azurerm_subnet.aks.id
  }

  linux_profile {
    admin_username = "azureuser"
    ssh_key {
      key_data = file("~/.ssh/id_rsa_azure.pub")
    }
  }

  identity {
    type = "SystemAssigned"
  }

  azure_active_directory_role_based_access_control {
    managed            = true
    azure_rbac_enabled = true
    # admin_group_object_ids = var.kubernetes_rbac_admin_groups
  }
}